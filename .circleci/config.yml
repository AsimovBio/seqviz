# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  node: circleci/node@4.2.0
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: cimg/node:16.2
    resource_class: large
    steps:
      - checkout
      - node/install-yarn:
          version: '2'
      - run: node -v
      - run: yarn -v

      # Download and cache dependencies
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn --immutable

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache

      - run: yarn test --bail --coverage --runInBand --silent --passWithNoTests --testTimeout=7000
  push: &push
    parameters:
      tag:
        type: string
        default: dev-$CIRCLE_SHA1
      url_common:
        type: string
        default: $NEXT_PUBLIC_FEDERATED_URL_COMMON_DEV
      url_shell:
        type: string
        default: $NEXT_PUBLIC_FEDERATED_URL_SHELL_DEV
    docker:
      - image: cimg/base:2021.03
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: target
      - run: echo $GCLOUD_SERVICE_KEY | docker login -u _json_key --password-stdin https://gcr.io
      - run: >
          TAG=<< parameters.tag >> docker-compose build
          --build-arg NEXT_PUBLIC_FEDERATED_URL_COMMON=<< parameters.url_common >>
          --build-arg NEXT_PUBLIC_FEDERATED_URL_SHELL=<< parameters.url_shell >>
      - run: TAG=<< parameters.tag >> docker-compose push
  deploy: &deploy
    parameters:
      directory:
        type: string
        default: dev
      tag:
        type: string
        default: dev-$CIRCLE_SHA1
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: deploy
          command: |
            # I'd normally prefer to have this prebaked, but kustomize isn't in any package managers, so I've
            # configured a release version in the context to grab.
            curl -s -L "${KUSTOMIZE_RELEASE}" > /usr/local/bin/kustomize
            chmod +x /usr/local/bin/kustomize
            echo "${GCLOUD_SERVICE_KEY}" | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project "${GOOGLE_PROJECT_ID}"
            gcloud --quiet config set compute/zone "${GOOGLE_COMPUTE_ZONE}"
            gcloud container clusters get-credentials "${CLUSTER_NAME}"
            cd k8s/<< parameters.directory >>
            kustomize edit set image gcr.io/hosting-infrastructure/kernel-shell="gcr.io/hosting-infrastructure/kernel-shell:<< parameters.tag >>"
            kustomize edit set image gcr.io/hosting-infrastructure/kernel-common="gcr.io/hosting-infrastructure/kernel-common:<< parameters.tag >>"
            kubectl apply -k .
  push_dev:
    <<: *push
  deploy_dev:
    <<: *deploy
  push_prod:
    <<: *push
  deploy_prod:
    <<: *deploy
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test
      - push_dev:
          context: asimov-gcr
          filters:
            branches:
              ignore: main
          requires:
            - test
          url_shell: $NEXT_PUBLIC_FEDERATED_URL_SHELL_DEV
          url_common: $NEXT_PUBLIC_FEDERATED_URL_COMMON_DEV
          tag: dev-$CIRCLE_SHA1
      - deploy_dev:
          context: asimov-dev-cluster
          directory: dev
          filters:
            branches:
              ignore: main
          requires:
            - push_dev
          tag: dev-$CIRCLE_SHA1
      - push_prod:
          context: asimov-gcr
          filters:
            branches:
              only: main
          requires:
            - test
          url_shell: $NEXT_PUBLIC_FEDERATED_URL_SHELL
          url_common: $NEXT_PUBLIC_FEDERATED_URL_COMMON
          tag: $CIRCLE_SHA1
      - deploy_prod:
          context: asimov-prod-cluster
          directory: prod
          filters:
            branches:
              only: main
          requires:
            - push_prod
          tag: $CIRCLE_SHA1
